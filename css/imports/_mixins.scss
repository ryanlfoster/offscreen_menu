/* =Media Queries
#########################################*/

/**
 * List of breakpoints defined by keywords
 *
 * small: 	minimum 500px
 * medium: 	minimum 700px
 * large: 	minimum 1000px
 */

$breakpoints: 	"below large"		"(min-width:1em) and (max-width:62.49em)",
				"medium"			"(min-width:43.75em)",
                "large"				"(min-width:62.50em)";

@mixin mq($media-query)
{
	@each $breakpoint in $breakpoints
	{
		$prefix:	nth($breakpoint, 1);
		$param: 	nth($breakpoint, 2);

		@if ($prefix != "") and ($param !="")
		{
			@if ($media-query == $prefix)
			{
				@media only screen and #{$param} { @content; }
			}
		}
		@else
		{
			@warn "media queries parameters not defined";
		}
	}
}

/* =Mixins
#########################################*/

/**
 * Vendor prefixes for transitions
 */

@mixin transition($value)
{
	-moz-transition:	#{$value};
	-o-transition:		#{$value};
	-webkit-transition:	#{$value};
	transition:			#{$value};
}

/**
 * Vendor prefixes for transforms
 */
@mixin transform($value)
{
	-moz-transform:		#{$value};
	-o-transform:		#{$value};
	-webkit-transform:	#{$value};
	transform:			#{$value};
}

/* =Silent classes
#########################################*/

/**
 * Clearfix (gallhager version)
 */
%clearfix
{
	&:before, &:after
	{
		content: " ";
		display: table;
	}

    &:after
	{
		clear: both;
	}
}

/**
 * Compact lists
 */
%list-compact
{
	list-style:none;
	margin:0;
	padding:0;
}

/**
 * Hide content
 * Target element must be floated or have a display of block
 */
%hide-content
{
	text-indent:100%;
	white-space:nowrap;
	overflow:hidden;
}

/* =Functions
#########################################*/

/**
 * Convert number to EM
 */
@function calc-em($target, $context:$base-fontsize)
{
	@return ($target / $context) * 1em;
}